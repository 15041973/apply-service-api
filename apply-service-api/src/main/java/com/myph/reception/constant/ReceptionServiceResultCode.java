package com.myph.reception.constant;import com.myph.common.constant.CodeStartEnum;import com.myph.common.constant.ServiceResultCode;import com.myph.common.util.ResultCodeUtils;import com.myph.constant.ApplyServiceCodeEnum;/** *  * @ClassName: ReceptionServiceResultCode * @Description: 实现ServiceResultCode *               <p> *               如果有修改过程，请记录 *               </P> * @author heyx * @date 2016年9月7日 上午10:28:25 * */public enum ReceptionServiceResultCode implements ServiceResultCode {    /**     * code:0 <br>     * message:删除信息成功     */    DEL_SUCCESS(0, "删除信息成功"),    /**     * code:0 <br>     * message:更新信息成功     */    UPDATE_SUCCESS(0, "更新信息成功"),    /**     * code:0 <br>     * message:新增信息成功     */    ADD_SUCCESS(0, "新增信息成功"),    /**     * code:2 <br>     * message:删除失败     */    DEL_FAIL(2, "删除失败"),    /**     * code:3 <br>     * 更新失败     */    UPDATE_FAIL(3, "更新失败"),    /**     * code:4 <br>     * 新增失败     */    ADD_FAIL(4, "新增失败"),    /**     * code:5 <br>     * 该客户存在未还款完成的的申请单！无法继续申请进件。     */    HAVE_INFO(5, "该客户存在未还款完成的的申请单！无法继续申请进件。"),    /**     * code:6 <br>     * 该客户在我司属于黑名单客户！无法继续申请进件。     */    INNER_BLACK(6, "该客户在我司属于黑名单客户！无法继续申请进件。"),    /**     * code:7 <br>     * 查询不到信息     */    ID_NULL(7, "查询不到信息"),    /**     * code:8 <br>     * 该客户存在90天内任一门店拒绝的进件单，封闭期内不允许再次进件，被拒单号     */    CONFINE_TIME(8, "该客户存在90天内任一门店拒绝的进件单，封闭期内不允许再次进件，被拒单号"),    /**     * code:1 <br>     * 该客户属于第三方黑名单客户，请认真核实客户信息。是否继续提交？     */    THIRD_BLACK(1, "该客户属于第三方黑名单客户，无法继续申请进件");    ReceptionServiceResultCode(int code, String message) {        this.message = message;        this.code = code;    }    private String message;    private int code;    @Override    public Integer getCode() {        return ResultCodeUtils.getResultCode(CodeStartEnum.EMPLOYEE_SERVICE.getCode(),                ApplyServiceCodeEnum.RECEPTION_SERVICE.getCode(), this.formartCode());    }    @Override    public String getMsg() {        return this.message;    }    public String formartCode() {        return ResultCodeUtils.formatString(this.code, 4);    }}